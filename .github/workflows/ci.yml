name: CI

on:
  push:
branches: [main, develop]
  pull_request:
branches: [main, develop]

jobs:
  install:
name: Install Dependencies
runs-on: ubuntu-latest
steps:
  - name: Checkout code
uses: actions/checkout@v4

  - name: Setup Node.js
uses: actions/setup-node@v4
with:
  node-version: '20'
  cache: 'yarn'

  - name: Enable Corepack
run: corepack enable

  - name: Install dependencies
run: yarn install --immutable

  quality-checks:
name: Lint, Type Check & Format
runs-on: ubuntu-latest
needs: install
steps:
  - name: Checkout code
uses: actions/checkout@v4

  - name: Setup Node.js
uses: actions/setup-node@v4
with:
  node-version: '20'
  cache: 'yarn'

  - name: Enable Corepack
run: corepack enable

  - name: Install dependencies
run: yarn install --immutable

  - name: Type check
run: yarn type-check
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  - name: Lint
run: yarn lint
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  - name: Format check
run: yarn format --check


  test:
name: Unit Tests
runs-on: ubuntu-latest
needs: install
steps:
  - name: Checkout code
uses: actions/checkout@v4

  - name: Setup Node.js
uses: actions/setup-node@v4
with:
  node-version: '20'
  cache: 'yarn'

  - name: Enable Corepack
run: corepack enable

  - name: Install dependencies
run: yarn install --immutable

  - name: Run unit tests with coverage
run: yarn test:coverage
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  # CI/CD specific configuration
  CI: true
  NODE_ENV: test

  - name: Upload test coverage
uses: actions/upload-artifact@v4
if: always()
with:
  name: test-coverage
  path: coverage/
  retention-days: 30

  test-e2e:
name: E2E Tests
runs-on: ubuntu-latest
needs: install
services:
  postgres:
image: supabase/postgres:15.1.0.147
env:
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
options: >-
  --health-cmd pg_isready
  --health-interval 10s
  --health-timeout 5s
  --health-retries 5
ports:
  - 5432:5432

steps:
  - name: Checkout code
uses: actions/checkout@v4

  - name: Setup Node.js
uses: actions/setup-node@v4
with:
  node-version: '20'
  cache: 'yarn'

  - name: Enable Corepack
run: corepack enable

  - name: Install dependencies
run: yarn install --immutable

  - name: Cache Playwright browsers
uses: actions/cache@v4
id: playwright-cache
with:
  path: ~/.cache/ms-playwright
  key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
  restore-keys: |
${{ runner.os }}-playwright-

  - name: Setup Supabase CLI
uses: supabase/setup-cli@v1
with:
  version: latest

  - name: Start Supabase local development setup
run: supabase start
env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

  - name: Setup Supabase environment variables
run: ./.github/scripts/setup-supabase-env.sh

  - name: Create demo users for testing
run: node scripts/create-demo-users.js
env:
  # Environment variables are set by setup-supabase-env.sh
  SUPABASE_URL: ${{ env.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}

  - name: Build for E2E testing
run: yarn build
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NODE_ENV: test
  # NEXT_PUBLIC_* vars from setup-supabase-env.sh are now available

  - name: Install Playwright browsers
if: steps.playwright-cache.outputs.cache-hit != 'true'
run: npx playwright install --with-deps

  - name: Install Playwright dependencies only (if browsers cached)
if: steps.playwright-cache.outputs.cache-hit == 'true'
run: npx playwright install-deps

  - name: Validate Environment
run: |
  # Simple validation for university project
  [ -n "$SUPABASE_URL" ] || { echo "Missing SUPABASE_URL"; exit 1; }
  [ -n "$SUPABASE_SERVICE_ROLE_KEY" ] || { echo "Missing SUPABASE_SERVICE_ROLE_KEY"; exit 1; }
  [ -n "$NEXT_PUBLIC_SUPABASE_URL" ] || { echo "Missing NEXT_PUBLIC_SUPABASE_URL"; exit 1; }
  [ -n "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ] || { echo "Missing NEXT_PUBLIC_SUPABASE_ANON_KEY"; exit 1; }
  echo "âœ… Environment validated"

  - name: Run Playwright tests
run: yarn test:e2e
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  # CI/CD specific configuration
  CI: true
  NODE_ENV: test
  # Local Supabase environment variables are set dynamically above

  - name: Upload Playwright report
uses: actions/upload-artifact@v4
if: always()
with:
  name: playwright-report
  path: playwright-report/
  retention-days: 30

  - name: Upload test results
uses: actions/upload-artifact@v4
if: always()
with:
  name: test-results
  path: test-results/
  retention-days: 30
