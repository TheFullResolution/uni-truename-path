{
  "numTotalTestSuites": 28,
  "numPassedTestSuites": 28,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 69,
  "numPassedTests": 69,
  "numFailedTests": 0,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "snapshot": {
"added": 0,
"failure": false,
"filesAdded": 0,
"filesRemoved": 0,
"filesRemovedList": [],
"filesUnmatched": 0,
"filesUpdated": 0,
"matched": 0,
"total": 0,
"unchecked": 0,
"uncheckedKeysByFile": [],
"unmatched": 0,
"updated": 0,
"didUpdate": false
  },
  "startTime": 1756331367061,
  "success": true,
  "testResults": [
{
  "assertionResults": [
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should fetch client info successfully",
  "status": "passed",
  "title": "should fetch client info successfully",
  "duration": 1.9360830000000533,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle HTTP errors",
  "status": "passed",
  "title": "should handle HTTP errors",
  "duration": 0.22749999999996362,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle different HTTP error codes",
  "status": "passed",
  "title": "should handle different HTTP error codes",
  "duration": 0.15979199999992488,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle network errors",
  "status": "passed",
  "title": "should handle network errors",
  "duration": 0.22174999999992906,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle network errors without message",
  "status": "passed",
  "title": "should handle network errors without message",
  "duration": 0.15949999999998,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle JSend failure responses",
  "status": "passed",
  "title": "should handle JSend failure responses",
  "duration": 0.19979200000011588,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle JSend failure without error details",
  "status": "passed",
  "title": "should handle JSend failure without error details",
  "duration": 0.20116699999994125,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should handle malformed JSend responses",
  "status": "passed",
  "title": "should handle malformed JSend responses",
  "duration": 0.18745800000010604,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "fetchClientInfo"],
  "fullName": "API Client fetchClientInfo should include proper headers",
  "status": "passed",
  "title": "should include proper headers",
  "duration": 1.0476249999999254,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should resolve OIDC claims successfully",
  "status": "passed",
  "title": "should resolve OIDC claims successfully",
  "duration": 0.33595900000000256,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should handle unauthorized errors (401)",
  "status": "passed",
  "title": "should handle unauthorized errors (401)",
  "duration": 0.14079199999991943,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should handle other HTTP errors as resolution_failed",
  "status": "passed",
  "title": "should handle other HTTP errors as resolution_failed",
  "duration": 0.1269999999999527,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should handle network errors",
  "status": "passed",
  "title": "should handle network errors",
  "duration": 0.16033300000003692,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should include Bearer token in Authorization header",
  "status": "passed",
  "title": "should include Bearer token in Authorization header",
  "duration": 0.26037499999983993,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "resolveOIDCClaims"],
  "fullName": "API Client resolveOIDCClaims should handle JSend failure responses",
  "status": "passed",
  "title": "should handle JSend failure responses",
  "duration": 0.15233400000010988,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "error handling utilities"],
  "fullName": "API Client error handling utilities should handle JSON parsing errors",
  "status": "passed",
  "title": "should handle JSON parsing errors",
  "duration": 0.17704200000002857,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "error handling utilities"],
  "fullName": "API Client error handling utilities should handle empty responses",
  "status": "passed",
  "title": "should handle empty responses",
  "duration": 0.1425840000001699,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "error handling utilities"],
  "fullName": "API Client error handling utilities should handle malformed success responses",
  "status": "passed",
  "title": "should handle malformed success responses",
  "duration": 0.7907090000001062,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "integration scenarios"],
  "fullName": "API Client integration scenarios should work with real-world response structures",
  "status": "passed",
  "title": "should work with real-world response structures",
  "duration": 0.21145799999999326,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["API Client", "integration scenarios"],
  "fullName": "API Client integration scenarios should handle complete OAuth resolution flow",
  "status": "passed",
  "title": "should handle complete OAuth resolution flow",
  "duration": 8.369457999999895,
  "failureMessages": [],
  "meta": {}
}
  ],
  "startTime": 1756331367997,
  "endTime": 1756331368012.3694,
  "status": "passed",
  "message": "",
  "name": "/Users/thefullresolution/Projects/demo-hr/packages/truename-oauth/src/__tests__/api-client.test.ts"
},
{
  "assertionResults": [
{
  "ancestorTitles": ["Auth Utils", "generateStateToken"],
  "fullName": "Auth Utils generateStateToken should generate a valid UUID string",
  "status": "passed",
  "title": "should generate a valid UUID string",
  "duration": 0.9480829999999969,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "generateStateToken"],
  "fullName": "Auth Utils generateStateToken should generate unique tokens on each call",
  "status": "passed",
  "title": "should generate unique tokens on each call",
  "duration": 0.23587500000007822,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "validateStateToken"],
  "fullName": "Auth Utils validateStateToken should return true for matching tokens",
  "status": "passed",
  "title": "should return true for matching tokens",
  "duration": 0.13462500000014188,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "validateStateToken"],
  "fullName": "Auth Utils validateStateToken should return false for non-matching tokens",
  "status": "passed",
  "title": "should return false for non-matching tokens",
  "duration": 0.10866699999996854,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "validateStateToken"],
  "fullName": "Auth Utils validateStateToken should handle empty strings",
  "status": "passed",
  "title": "should handle empty strings",
  "duration": 0.15629199999989396,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "validateStateToken"],
  "fullName": "Auth Utils validateStateToken should handle null and undefined values",
  "status": "passed",
  "title": "should handle null and undefined values",
  "duration": 0.15279099999997925,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should extract token and state from query string",
  "status": "passed",
  "title": "should extract token and state from query string",
  "duration": 0.43791699999997036,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should handle missing parameters",
  "status": "passed",
  "title": "should handle missing parameters",
  "duration": 0.12950000000000728,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should return null for all missing parameters",
  "status": "passed",
  "title": "should return null for all missing parameters",
  "duration": 0.12333300000000236,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should handle empty query string",
  "status": "passed",
  "title": "should handle empty query string",
  "duration": 0.1278749999999036,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should handle malformed query strings",
  "status": "passed",
  "title": "should handle malformed query strings",
  "duration": 0.13704200000006495,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "parseCallbackParams"],
  "fullName": "Auth Utils parseCallbackParams should handle URL encoded values",
  "status": "passed",
  "title": "should handle URL encoded values",
  "duration": 0.11858299999994415,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "isAuthenticated"],
  "fullName": "Auth Utils isAuthenticated should return true when token and userData exist",
  "status": "passed",
  "title": "should return true when token and userData exist",
  "duration": 0.2928750000000946,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "isAuthenticated"],
  "fullName": "Auth Utils isAuthenticated should return false when token is missing",
  "status": "passed",
  "title": "should return false when token is missing",
  "duration": 0.13358400000015536,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "isAuthenticated"],
  "fullName": "Auth Utils isAuthenticated should return false when userData is missing",
  "status": "passed",
  "title": "should return false when userData is missing",
  "duration": 0.11791599999992286,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "isAuthenticated"],
  "fullName": "Auth Utils isAuthenticated should return false when both token and userData are missing",
  "status": "passed",
  "title": "should return false when both token and userData are missing",
  "duration": 0.10283400000002985,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "getAuthState"],
  "fullName": "Auth Utils getAuthState should return complete auth state when authenticated",
  "status": "passed",
  "title": "should return complete auth state when authenticated",
  "duration": 0.2161670000000413,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "getAuthState"],
  "fullName": "Auth Utils getAuthState should return unauthenticated state when no token",
  "status": "passed",
  "title": "should return unauthenticated state when no token",
  "duration": 0.14387499999998,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "getAuthState"],
  "fullName": "Auth Utils getAuthState should return unauthenticated state when no userData",
  "status": "passed",
  "title": "should return unauthenticated state when no userData",
  "duration": 0.11654099999987011,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "getAuthState"],
  "fullName": "Auth Utils getAuthState should always return null for expiresAt",
  "status": "passed",
  "title": "should always return null for expiresAt",
  "duration": 0.10670799999979863,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "buildAuthUrl"],
  "fullName": "Auth Utils buildAuthUrl should construct valid OAuth authorization URL",
  "status": "passed",
  "title": "should construct valid OAuth authorization URL",
  "duration": 0.16345800000021882,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "buildAuthUrl"],
  "fullName": "Auth Utils buildAuthUrl should include all required parameters",
  "status": "passed",
  "title": "should include all required parameters",
  "duration": 0.18849999999997635,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "buildAuthUrl"],
  "fullName": "Auth Utils buildAuthUrl should properly encode special characters in parameters",
  "status": "passed",
  "title": "should properly encode special characters in parameters",
  "duration": 0.15962500000000546,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Auth Utils", "buildAuthUrl"],
  "fullName": "Auth Utils buildAuthUrl should handle minimal valid base URL",
  "status": "passed",
  "title": "should handle minimal valid base URL",
  "duration": 0.1864579999999023,
  "failureMessages": [],
  "meta": {}
}
  ],
  "startTime": 1756331368256,
  "endTime": 1756331368261.1865,
  "status": "passed",
  "message": "",
  "name": "/Users/thefullresolution/Projects/demo-hr/packages/truename-oauth/src/__tests__/auth-utils.test.ts"
},
{
  "assertionResults": [
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "getItem"],
  "fullName": "Storage LocalStorageAdapter getItem should get item from localStorage",
  "status": "passed",
  "title": "should get item from localStorage",
  "duration": 1.5514170000001286,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "getItem"],
  "fullName": "Storage LocalStorageAdapter getItem should return null for non-existent key",
  "status": "passed",
  "title": "should return null for non-existent key",
  "duration": 0.2630420000000413,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "getItem"],
  "fullName": "Storage LocalStorageAdapter getItem should handle localStorage errors gracefully",
  "status": "passed",
  "title": "should handle localStorage errors gracefully",
  "duration": 0.15833299999985684,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "setItem"],
  "fullName": "Storage LocalStorageAdapter setItem should set item in localStorage",
  "status": "passed",
  "title": "should set item in localStorage",
  "duration": 0.2103340000001026,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "setItem"],
  "fullName": "Storage LocalStorageAdapter setItem should handle localStorage errors gracefully",
  "status": "passed",
  "title": "should handle localStorage errors gracefully",
  "duration": 0.5282919999999649,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "removeItem"],
  "fullName": "Storage LocalStorageAdapter removeItem should remove item from localStorage",
  "status": "passed",
  "title": "should remove item from localStorage",
  "duration": 0.22316599999999198,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "removeItem"],
  "fullName": "Storage LocalStorageAdapter removeItem should handle localStorage errors gracefully",
  "status": "passed",
  "title": "should handle localStorage errors gracefully",
  "duration": 0.17954099999997197,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "clear"],
  "fullName": "Storage LocalStorageAdapter clear should clear all items from localStorage",
  "status": "passed",
  "title": "should clear all items from localStorage",
  "duration": 0.238207999999986,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "LocalStorageAdapter", "clear"],
  "fullName": "Storage LocalStorageAdapter clear should handle localStorage errors gracefully",
  "status": "passed",
  "title": "should handle localStorage errors gracefully",
  "duration": 0.21487500000012005,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "constructor"],
  "fullName": "Storage OAuthStorage constructor should initialize with app-specific key prefix",
  "status": "passed",
  "title": "should initialize with app-specific key prefix",
  "duration": 0.2642920000000686,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "token management"],
  "fullName": "Storage OAuthStorage token management should store token with prefix and timestamp",
  "status": "passed",
  "title": "should store token with prefix and timestamp",
  "duration": 0.27529200000003584,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "token management"],
  "fullName": "Storage OAuthStorage token management should retrieve stored token",
  "status": "passed",
  "title": "should retrieve stored token",
  "duration": 0.13758400000006077,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "token management"],
  "fullName": "Storage OAuthStorage token management should return null for non-existent token",
  "status": "passed",
  "title": "should return null for non-existent token",
  "duration": 0.5094589999998789,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "user data management"],
  "fullName": "Storage OAuthStorage user data management should store user data as JSON",
  "status": "passed",
  "title": "should store user data as JSON",
  "duration": 0.2862920000000031,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "user data management"],
  "fullName": "Storage OAuthStorage user data management should retrieve and parse stored user data",
  "status": "passed",
  "title": "should retrieve and parse stored user data",
  "duration": 0.18754199999989396,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "user data management"],
  "fullName": "Storage OAuthStorage user data management should return null for non-existent user data",
  "status": "passed",
  "title": "should return null for non-existent user data",
  "duration": 0.14312500000005457,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "user data management"],
  "fullName": "Storage OAuthStorage user data management should handle JSON parse errors gracefully",
  "status": "passed",
  "title": "should handle JSON parse errors gracefully",
  "duration": 0.15204199999993762,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "user data management"],
  "fullName": "Storage OAuthStorage user data management should handle empty string gracefully",
  "status": "passed",
  "title": "should handle empty string gracefully",
  "duration": 0.1074580000001788,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "state management"],
  "fullName": "Storage OAuthStorage state management should store state token",
  "status": "passed",
  "title": "should store state token",
  "duration": 0.17412500000000364,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "state management"],
  "fullName": "Storage OAuthStorage state management should retrieve stored state",
  "status": "passed",
  "title": "should retrieve stored state",
  "duration": 0.1232910000001084,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "state management"],
  "fullName": "Storage OAuthStorage state management should return null for non-existent state",
  "status": "passed",
  "title": "should return null for non-existent state",
  "duration": 0.1269169999998212,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "clearAll"],
  "fullName": "Storage OAuthStorage clearAll should clear all OAuth-related data",
  "status": "passed",
  "title": "should clear all OAuth-related data",
  "duration": 0.3345839999999498,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": ["Storage", "OAuthStorage", "clearAll"],
  "fullName": "Storage OAuthStorage clearAll should work even when no data exists",
  "status": "passed",
  "title": "should work even when no data exists",
  "duration": 0.14270799999985684,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": [
"Storage",
"OAuthStorage",
"integration scenarios"
  ],
  "fullName": "Storage OAuthStorage integration scenarios should handle complete OAuth flow data lifecycle",
  "status": "passed",
  "title": "should handle complete OAuth flow data lifecycle",
  "duration": 0.24324999999998909,
  "failureMessages": [],
  "meta": {}
},
{
  "ancestorTitles": [
"Storage",
"OAuthStorage",
"integration scenarios"
  ],
  "fullName": "Storage OAuthStorage integration scenarios should maintain isolation between different app instances",
  "status": "passed",
  "title": "should maintain isolation between different app instances",
  "duration": 0.27137500000003456,
  "failureMessages": [],
  "meta": {}
}
  ],
  "startTime": 1756331367943,
  "endTime": 1756331367951.2715,
  "status": "passed",
  "message": "",
  "name": "/Users/thefullresolution/Projects/demo-hr/packages/truename-oauth/src/__tests__/storage.test.ts"
}
  ]
}
